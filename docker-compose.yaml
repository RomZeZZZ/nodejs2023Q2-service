
version: '3.1'

services:
  app:
    restart: always
    image: nodejs-library
    build:
      context: .
      dockerfile: Dockerfile
      args: 
        - PORT=$PORT
    ports: 
      - 4000:4000
    networks: 
      - user-network

  db:
    image: postgres:15.4
    restart: always
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
      - postgres-db-logs:/logs:z
    #volumes:
    #  - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    # command: /bin/bash -c "mkdir -p /logs && chmod -R 777 /logs && postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/logs"
    environment:
      POSTGRES_PASSWORD: $POSTGRESS_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRESS_DB
    ports:
      - 5433:5432
    networks: 
      - user-network

  migrations:
    image: nodejs-library
    build:
      context: .
      dockerfile: Dockerfile
    restart: "no"
    command: sh -c "npm run migration:generate && npm run migration:run"
    depends_on:
      - app
      - db
    networks: 
      - user-network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  postgres-db-data:
  postgres-db-logs:
networks:
  user-network: